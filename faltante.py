import pandas as pd
from conection.Database import conectar_bd

def obtener_datos():
    conexion = conectar_bd()
    query = """
     SELECT 
        ic.valor AS Numero,
        ic.confirmado AS verificacion,
        p.noDocumento AS documento,
        p.nombres AS cliente,
        c.nit,
        c.nombre AS Comercio,
        " " as barrio,
        c.direccion,
        ven.asesor,
        ven.area AS grupo,
        pcaz.diaVisita
    FROM INFO_CONTACTO ic
    JOIN PERSONA p ON p.noDocumento = ic.fk_noDocumento
    JOIN COMERCIO c ON c.fk_noDocumento = p.noDocumento
    JOIN PERTENENCIA_COMERCIO_A_ZONA pcaz ON pcaz.fk_idComercio = c.idComercio
    JOIN (
        SELECT 
            noDocumento,
            rn.idResponsableNegocio AS idasesor,
            nombres AS asesor,
            ar.area
        FROM PERSONA p
        JOIN RESPONSABLE_NEGOCIO rn ON rn.fk_noDocumento = p.noDocumento
        JOIN AREA_RESPONSABLE ar ON ar.idarea = rn.area
        WHERE rn.idrol = 1
    ) ven ON pcaz.codAsesorTemp = ven.idasesor
    WHERE 
        c.estado = 'ACT' 
      and ic.tipo = 'WHATSAPP' 
       AND  ic.confirmado IS NULL
        AND p.noDocumento IN (
46378813
,6771678
,79619263
,74378872
,1049642912
,6771699
,52798436
,74334492
,1056957028
,24217897
,4283293
,24099358
,4207924
,1049652134
,40039003
,40012962
,6767320
,40036357
,24163064
,19160831
,24028275
,40019123
,19242432
,1055274887
,52412584
,1057571792
,24098421
,7168086
,46380515
,46380515
,23547447
,40048519
,40048519
,41597356
,24069621
,24234139
,40031165
,40032839
,40024660
,1049626815
,23965057
,46353639
,3056562
,1007584827
,40035139
,37835324
,40047618
,40019116
,40020697
,6762139
,23432765
,7170174
,52547761
,1051588872
,7126445
,7126860
,24219072
,46357699
,23596193
,46368994
,24176147
,30050741
,40022976
,40027653
,1049634036
,40049751
,23752721
,1049613156
,9522436
,9522436
,40035334
,23824202
,40021129
,1049622426
,40016873
,1049643448
,45620528
,80396637
,39900825
,40045230
,7173430
,74859912
,1049609382
,40028217
,40027828
,1032456253
,24219747
,24219390
,46371313
,40014960
,23778509
,40028219
,40029536
,40033781
,23591507
,24212995
,24226552
,46365437
,23812219
,23297276
,40018023
,41540108
,40028374
,46352945
,35403829
,33367755
,1049649590
,40022903
,1049625490
,23474122
,7173196
,1049648041
,40035712
,1049628241
,1052386646
,40044333
,40044333
,24070502
,24070502
,24149081
,46358645
,46353765
,23764874
,9519606
,46666184
,39758056
,40038850
,40041184
,40042531
,24202808
,40040954
,40035310
,40009109
,40024396
,40029484
,23349546
,24049361
,46359255
,23273373
,40013801
,4043300
,7184333
,23554553
,24010868
,40034963
,52431226
,1075660329
,23964098
,23545481
,40022363
,1052379826
,37707593
,1049655842
,46367558
,23809660
,52553883
,24069954
,74380940
,24218142
,24218142
,23544944
,40036882
,1121204261
,46372670
,40021622
,46368315
,4276915
,24115536
,23866508
,23945021
,46360864
,46371799
,46360328
,53064757
,40026690
,79246898
,6768571
,40033468
,23276762
,24218405
,51636308
,1049605747
,53098474
,53098474
,1057577009
,46352260
,4094012
,7171725
,9522883
,46370217
,40046417
,46363777
,52983006
,23274148
,24156979
,7182101
,1053585310
,23430700
,46384312
,23845590
,24187819
,24436838
,40040166
,1057584994
,1049621526
,40024447
,40048140
,9536157
,9536157
,9535222
,46355349
,23754214
,1055273181
,6755348
,1049635741
,40029542
,1018411893
,46384033
,28237429
,51670023
,40026095
,74280747
,1002367859
,46352674
,40048927
,23257790
,1093753682
,23351460
,46357221
,41636874
,27897237
,40047923
,23474953
,1057581461
,46362996
,46364082
,37179631
,23284842
,1057598178
,60278407
,24111043
,46385881
,1057574860
,9398929
,40014251
,46370035
,1057590032
,7210626
,1042604
,1052414056
,40041285
,40035663
,33368609
,46373009
,1052395300
,74182246
,7165352
,7165352
,40032627
,1048851322
,65727526
,1057590611
,23322658
,46366583
,46385532
,46452946
,9526237
,52700350
,46361159
,46360918
,40030893
,4211104
,1057604964
,1057604964
,23554136
,60420704
,33449737
,23862218
,40039056
,7183301
,40048789
,51561091
,1104068957
,1057571461
,23545603
,52358051
,46357722
,46379272
,24117426
,4171124
,74188918
,46377404
,1022361775
,23835275
,1002729976
,24218646
,40036951
,46371573
,1058461166
,13702857
,63311006
,40042962
,28477619
,1051476036
,1049605565
,24069883
,43878720
,43878720
,40027639
,1049632077
,1049631357
,46355837
,1057463017
,107203799
,1052399138
,6771678
,40036592
,40036592
,40036592
,40036592
,40036592
,1049620340
,4081386
,46369557
,40025336
,1049638826
,79913549
,46369557
,46456606
,1069282612
,24217097
,4292622
,1052386673
,1022371403
,46663957
,33378405
,1022955125
,1022955125
,23459691
,51721750
,1051472261
,40049497
,1049640241
,1054678804
,33368599
,1049602871
,24218886
,40040487
,46379504
,1016062433
,23332634
,40035466
,7161594
,46660658
,33366177
,6757970
,1053512656
,1049614169
,1052394413
,52193952
,1049643097
,901196409-8
,23808775
,1051954526
,1007196892
,40051634
,8036308
,23332986
,1049629230
,33365941
,33365995
,1002740617
,24070701
,24070701
,24221596
,33365922
,40039265
,53040444
,53040444
,53040444
,53040444
,40015623
,1050221238
,1014260043
,46364153
,1051473052
,46450855
,1049630589
,40032867
,51905564
,1160447
,1160447
,46382730
,24213633
,40008444
,40020333
,93362690
,37255286
,52705005
,40022388
,24218070
,1010235527
,1010235527
,4112000
,23501725
,20368485
,40016835
,23944475
,901470008-2
,40009227
,1002709379
,1002709379
,33447139
,46353956
,40026207
,74381570
,33366321
,23271578
,1057597231
,23583053
,23556318
,1057584107
,46354762
,46384523
,9397798
,2517569
,23323669
,40033624
,3242254
,3242254
,1049657235
,39801379
,901480363-5
,23810137
,23810137
,23810137
,1049644061
,1057186618
,24202808
,40032835
,23430557
,40048430
,4217492
,1052402634
,1007414055
,46451971
,1110591164
,1056955523
,1056955523
,1015410821
,4123406
,24219144
,1020796541
,24217691
,24070362
,1056930207
,24016421
,1051484840
,1010137589
,1010137589
,23755931
,24115830
,74379923
,40042636
,79655584
,23824315
,24221843
,1019102340
,1056928439
,1056928439
,46364517
,1049610373
,80392924
,1010018026
,1049634860
,46363311
,1014285436
,1118560298
,40046283
,40035446
,33378328
,46366996
,1049613835
,1056054275
,46385306
,46369605
,1057592794
,79513208
,23810144
,1002741221
,46381347
,1002480095
,1053538385
,1053538385
,1056954588
,1002370013
,1007414055
,33378516
,33365890
,46664331
,46380276
,46674787
,33515368
,24218911
,1057590710
,40027639
,40041787
,33375309
,1116182079
,1049620541
,24645625
,4249488
,1024506273
,1002539308
,1095797968
,7160668
,1007493893
,1057595508
,1057591505
,12284001
,4123288
,40048174
,1057412946
,46379882
,40042480
,1057574914
,46379882
,1007395074
,46375558
,4192730
,1049658865
,1057596384
,52516780
,7305981
,1012330932
,1052406867
,1057572477
,1052379096
,1052400295
,1049630414
,1049611069
,1102549551
,1057593634
,4214521
,900781557
,1053608751
,1056928257
,1049625253
,1006423641
,1052414223
,46668481
,1053512819
,1053512819
,1057592794
,24037665
,7223619
,47395524
,901666108
,23556525
,46374857
,901666108
,40049369
,40039208
,9530130
,1057598347
,1056709195
,1049649578
,7167055
,1049654692
,1049654692
,4046660
,8642775
,46381446
,901666108
,901666108
,46663491
,1052398476
,5854279
,46670335
,46377845
,1032395912
,46673523
,23823716
,23268765
,901568827-0
,74189714
,40030182
,46673523
,46374880
,23274170
,1052408208
,1053302586
,1051211326
,52773715
,1049631768
,1115730386
,1051589810
,46368578
,23809839
,1030628605
,40043165
,23944764
,23501719
,40034061
,1001330265
,1093766940
,46381788
,1053334826
,1007206788
,1057186136
,46376927
,46364868
,40033937
,1007297269
,1007142644
,1093884568
,1052405512
,40280109
,23945146
,23945146
,52963238
,52963238
,24018952
,1030668331
,9514125
,7173785
,1057577969
,40042509
,46374208
,52273160
,37292916
,79790064
,79790064
,23944092
,1056708396
,1002330532
,40029156
,23926261
,20744317
,1049604707
,1002329069
,1002367133
,5632031
,1005063242
,63393625
,1098150488
,1013581555
,4207713
,24090888
,23945614
,1056709375
,4133635
,1052498489
,1057463031
,13929682
,20729695
,20729695
,20729695
,20729695
,20729695
,1049632111
,1049632111
,4233001
,7215060
,46378784
,46378784
,1049644629
,1049610127
,1057594721
,1019102340
,1002537343
,1058038514
,46353789
,1051954975
,1002607511
,1049606300
,23323910
,9398536
,46386725
,13617404
,23769807
,23769807
,23769807
,46376967
,46376967
,40026410
,23963513
,24197004
,40017547
,23359546
,4285143
,39697007
,24162215
,24163819
,4138019
,4128758
,4129927
,74282626
,74282626
,23623641
,74282080
,74325559
,23623066
,23621170
,17150788
,4130717
,23701208
,4150348
,23622937
,23620324
,39654067
,23756022
,73580260
,80492396
,74346857
,23753557
,39780066
,23755832
,23415372
,1052358569
,33675472
,1032408290
,33676078
,7330259
,52459828
,33675131
,33676790
,33675369
,33677319
,23605541
,74363026
,24120645
,23966250
,52356630
,7330228
,51968153
,23681934
,74280575
,900514210
,33675216
,65775068
,33675444
,23653152
,24138629
,7331335
,1057462548
,33675929
,1057465321
,41419289
,24161340
,52886415
,23753354
,33676531
,24138966
,74329465
,1018407485
,24139049
,1058058270
,74347293
,23682058
,23433349
,23606737
,23607779
,24157377
,23607724
,33676525
,23694530
,1049794543
,1057436193
,4043778
,23753849
,24137817
,24197979
,24163298
,24197216
,52550840
,23754157
,23754005
,23755212
,74338562
,35463431
,40034751
,40034751
,33675876
,24120627
,23963574
,23754713
,24139104
,33675296
,24137903
,23433836
,79980174
,1054780379
,52913274
,51775252
,23755527
,4053516
,53176654
,24161893
,33675215
,1019081437
,1051336628
,52899484
,24157327
,52730450
,33675904
,33675904
,33675904
,33675904
,33675904
,10315821
,4286880
,23628654
,23621825
,1049794544
,23694695
,1002586988
,23605355
,24120516
,1049794857
,40022512
,20646049
,23621302
,1053559385
,40031884
,1048850525
,1050692811
,52953537
,60332930
,83085226
,23682350
,24221789
,1057464449
,74364802
,23701042
,1048848640
,24138946
,1057690398
,11297806
,7332840
,28484340
,23824235
,23415217
,33676562
,1049797484
,4297191
,23702687
,1002698799
,74339804
,23474853
,33677380
,33676846
,1056612356
,1057464241
,1054658355
,40014764
,40014764
,40014764
,1022955285
,1048848628
,24162470
,1056688180
,52081623
,4148491
,80720477
,33676067
,52047375
,23622913
,24157429
,1070595319
,40028322
,1002565529
,1002565529
,20958670
,1048850855
,23700885
,7173185
,7173185
,24149981
,24149981
,74282147
,1053724498
,1018512302
,80261281
,1057164090
,1054374664
,901362531
,1057465673
,23622523
,33677768
,24156701
,7331865
,7331865
,52793727
,4188871
,1049615481
,901489071
,4297174
,1049604322
,1049604322
,24197973
,24221903
,4130388
,1002457142
,52379042
,23823995
,1023890301
,1052396200
,24120495
,74335405
,1057412597
,1006147313
,1118167867
,24163975
,1024527418
,1084742908
,7331599
,40041386
,1001203020
,23433963
,23754444
,24163856
,51814123
,23754670
,71002112
,71002112
,901749171-9
,1052385119
,91108987
,91108987
,91108987
,1053586152
,23508795
,23508795
,1057574860
,52764533
,52764533
,52764533
,52764533
,1052393683
,23946013
,23946013
,1053611986
,46357870
,79113960
,79113960
,1049633202
,23588824
,46682401
,40019113
,74451783
,46374729
,39802919
,46682496
,74392623
,4148171
,23605497
,23693864
,1032512581
,23415637
,23415790
,51588430
,23701113
,23701045
,23702319
,23700983
,74325167
,19101642
,23701886
,25914046
,74282821
,1058324916
,23701786
,44005479
,24198181
,3099161
,7184686
,23752053
,52557258
,1048848748
,52990787
,23306321
,23306321
,52036551
,33675918
,33675762
,1053335619
,1233489801
,23607914
,52860759
,1048846906
,52079699
,23622890
,23623302
,1057690393
,23681984
,23965679
,8001181696
,23326892
,23964870
,23326848
,35315804
,1058324474
,23764322
,24120591
,79249438
,1054800500
,24162350
,1054801190
,52536934
,21039803
,23701393
,24211647
,24212632
,19096802
,80353917
,23617760
,23620097
,24234838
,1002993
,4226102
,24211946
,52964579
,52218825
,24212336
,4125367
,53074272
,20748961
,20750893
,1069898795
,23423814
,51931107
,11280307
,1069898823
,51922791
,39546977
,40189685
,20750697
,1069898702
,40032875
,17309618
,20750753
,1121941473
,1070952342
,52485993
,9390003
,52292432
,60422508
,72327075
,23701810
,23700964
,80733123
,4150640
,1079032544
,20749439
,23423279
,23423490
,41521790
,19089795
,4150570
,23553659
,9014319366
,901431936
,80470003
,1007135086
,23422756
,23424047
,1030626319
,1057919770
,1057919552
,23422884
,23423938
,41653229
,4076542
,80082488
,23422695
,23423421
,23424101
,23422706
,1069900650
,1006701134
,23423175
,1057919093
,23423842
,23702451
,23424086
,53083700
,7366648
,74353100
,23424172
,23423883
,23422931
,23424224
,74325464
,41343814
,1048710266
,23700763
,40442577
,23306724
,33677444
,79723959
,2921901
,52584552
,4049081
,23306364
,33676377
,38212535
,23306602
,1052000031
,42115852
,23306494
,74282431
,1052000361
,52133095
,1052000090
,52215543
,24120678
,23629508
,41467350
,23628934
,4131210
,1013669357
,4132279
,9620047
,1052000077
,51716848
,4131256
,23628488
,52698068
,52534440
,23629747
,23629405
,23628959
,23629706
,23629246
,1010222046
,1051336713
,1051336738
,1049795601
,1051336452
,23629634
,53114360
,9620012
,23629093
,891801710
,17177817
,23623236
,1022394930
,4131353
,23628707
,52145631
,23629186
,23399714
,23301569
,23267567
,23301580
,23301507
,52019502
,23694458
,30407013
,23301539
,33676041
,39634871
,80047829
,1054658305
,53891986
,23694054
,1054658394
,4129760
,23694172
,1054658839
,4147859
,1010206515
,41397801
,4263167
,1054780374
,1143140750
,24120152
,79423382
,52309927
,53007302
,1002586660
,1054780510
,52813290
,24120437
,23275540
,19329257
,52538509
,52705087
,1054780403
,24120476
,4264440
,24120616
,1022399022
,19255931
,24119897
,24119447
,23620167
,1064342
,23621215
,23622587
,24138633
,24120527
,24119944
,1054780339
,1002314069
,1049794989
,74283117
,1048846458
,39735096
,74283160
,24119562
,24119659
,1049796132
,4129484
,19342665
,4264224
,32707403
,39546834
,1058324549
,1032486386
,23417363
,1063010
,1063010
,1063010
,1063010
,23623584
,4263261
,1109386022
,28685050
,52079871
,23622569
,23622569
,23622569
,55063823
,80420224
,24137843
,74282217
,1052790048
,23623082
,23622796
,1031145030
,23619271
,20743976
,4264336
,40433020
,20743347
,3203171
,52213237
,23623687
,1049794134
,1049798166
,23622149
,1049798265
,1049797931
,23619269
,74281425
,74282277
,23623239
,23622477
,1049024650
,1023952755
,24119797
,1024540820
,23621719
,23622237
,23620316
,53077436
,1049798364
,7247472
,4074711
,4128955
,33677174
,23623401
,23619624
,24138918
,52162305
,24137758
,74363009
,24138904
,23620234
,41411310
,52636200
,24138321
,24138027
,24137272
,23694377
,23399904
,23399679
,40047054
,23606303
,79390813
,1002281232
,41240939
,23399192
,23399521
,40043623
,23399658
,46350924
,41460802
,23399369
,1015351
,4071334
,9505907
,23399855
,23399816
,23399882
,24156542
,4274218
,4274218
,24156311
,23624192
,24156033
,4273567
,80443526
,1053724748
,24157242
,24155584
,24156235
,24138574
,33677847
,24157325
,24156675
,23682062
,1049612536
,1053724956
,23925917
,23607799
,51561190
,24156117
,33677295
,23604346
,1019102130
,33677755
,820003341
,1002270907
,7335156
,23605564
,19157831
,51562987
,7335879
,1048850666
,35517548
,23606001
,41389533
,1048710585
,41632501
,52360117
,23752614
,23623243
,23846107
,23606374
,7330683
,41620718
,51984842
,33677307
,1048850840
,23606114
,7334020
,52082396
,51588541
,51975261
,74352412
,23606751
,1048847719
,1030565940
,7332848
,7332539
,33676992
,23622031
,33675423
,4129898
,7178767
,4188509
,33676103
,23605530
,1052358654
,23606131
,39813875
,23607781
,42138166
,53060899
,23605888
,1048847462
,1022411911
,7334007
,1048847030
,7333086
,23607905
,1048850498
,39650785
,19453153
,1016033558
,33677608
,1048850956
,4148014
,33676321
,23554158
,23604988
,7335049
,7336075
,7330604
,23424346
,33675217
,1049658679
,33676574
,3980899
,33676808
,33675275
,1048849862
,4076825
,1048850343
,33676628
,52430231
,19336577
,1007555858
,1091472204
,23604523
,23301560
,1048850332
,23604504
,1056688547
,4145009
,1056688266
,1056688441
,7334512
,23681951
,23681290
,23680977
,23682301
,33676141
,24156965
,52335721
,4075464
,79457270
,79753861
,23754198
,23415774
,74347716
,23415482
,23752692
,1049602819
,23415323
,23753837
,1057436518
,23415706
,1002721768
,74346017
,9506510
,74856377
,74346271
,1007416063
,9506588
,23414690
,72325726
,9505806
,47431701
,1010201171
,41732178
,79546745
,51851402
,19182031
,33676048
,1032382368
,2860780
,23845802
,25599601
,52562330
,23845571
,52492225
,19450623
,52520160
,1052358398
,1052359087
,19304086
,4090609
,1115856314
,33676408
,35468774
,23474800
,1002456637
,20944982
,4090233
,23652213
,74364867
,1052358211
,1023937025
,23474893
,24213661
,1014213694
,1057410060
,23749960
,52236846
,1057412201
,23753700
,52095961
,1057412792
,40023021
,23414849
,1053282513
,52345321
,23752132
,23750097
,74347175
,74346079
,23752663
,1193532827
,23752801
,1057463035
,23755507
,23754610
,1057411550
,74346189
,23754771
,23754684
,23751681
,1057410262
,52455146
,51563830
,14217678
,24211484
,1050034898
,1056613990
,1056613424
,39686419
,79364668
,24213339
,33677648
,24211248
,1056612971
,1054802954
,24213044
,37178549
,23147492
,24211733
,24212880
,23333141
,74348262
,4055671
,23326655
,23753776
,23333109
,46381161
,4055051
,23333185
,4055597
,4037661
,23333104
,23333243
,4055141
,23326719
,1053282136
,23755328
,24211967
,24212316
,24211147
,24213295
,24213478
,24213122
,24234905
,6776667
,80832783
,24234385
,28822212
,23755401
,1016098767
,24233444
,6774105
,15726415
,23754334
,52280377
,1058058891
,24233592
,24233961
,1058058049
,24234911
,24198338
,4291168
,1057410115
,1000494257
,24234225
,19297526
,23751936
,24373087
,41641955
,4275701
,24163168
,23288264
,24161508
,24162678
,24163279
,24198400
,28522509
,1054803417
,1054800749
,52752149
,23966415
,24162401
,24160836
,24163104
,1115942165
,24161364
,35501709
,24162013
,6750976
,23271117
,24163461
,24162993
,4275738
,24161409
,80857687
,24162920
,24161548
,23275884
,1054801992
,1049634185
,24198118
,20737684
,52103461
,51868783
,24198380
,4057610
,80219348
,4285687
,93402561
,4285783
,39667875
,23423858
,23265579
,24197886
,24198001
,1054372687
,24197150
,24195759
,1054373367
,24198583
,21102553
,1054374412
,40045560
,1054802028
,23823181
,74328556
,3061842
,23823425
,1002394744
,4183275
,35497316
,52547054
,39712980
,1054708249
,4182625
,1048846487
,23964838
,79283320
,1054800775
,1053558286
,23653282
,1053559084
,23651943
,51602811
,1054801513
,1121881190
,23651809
,1053559268
,23653224
,1116774732
,19264480
,46664872
,21075924
,1053559025
,20500007
,1049636026
,23652974
,23653229
,1049607346
,1057465181
,1030533701
,23968153
,37895244
,72325590
,7178627
,23964959
,23964294
,1057466690
,72325680
,19280261
,4220953
,23966099
,23602856
,1052380087
,23360086
,23965872
,39615200
,23965647
,4221864
,1002550195
,72325423
,4220379
,23964037
,23349757
,900184317
,40041310
,23966560
,1057465470
,1002722905
,23269363
,40008708
,1057464309
,23965253
,23964685
,23966391
,23965671
,40036677
,23433365
,23433356
,23433643
,26509776
,1050692235
,23965434
,4293403
,47431979
,1050692421
,23433027
,1050693472
,23433541
,52481287
,41769603
,24221688
,72326472
,24221194
,1050692940
,1057736248
,1057736368
,1050692552
,23652902
,51855294
,1056930341
,46377062
,1057465199
,1057465199
,1057595056
,1057465474
,1057465474
,1057465474
,33379016
,1007305799
,23622872
,1022373217
,1022373217
,33368039
,4288495
,1010246740
,23430700
,7228518
,7228518
,46380187
,46380187
,46380187
,46352030
,9635574
,1053613569
,1052382520
,1007518152
,1002741203
,74374369
,1018447853
        )
    """
    return pd.read_sql(query, conexion)

def seleccionar_fila_menor_asesor(df):
    # Contar cuántos clientes tiene cada asesor
    contador_clientes = df['asesor'].value_counts().to_dict()

    # Crear un DataFrame vacío para almacenar la fila de cada cliente con el asesor más adecuado
    resultado_final = pd.DataFrame()

    # Iterar sobre cada cliente y seleccionar la fila con el asesor con menos clientes asignados
    for documento, grupo in df.groupby('documento'):
        # Encontrar el asesor con menos clientes asignados para el grupo de ese cliente
        asesor_min_clientes = min(grupo['asesor'], key=lambda x: contador_clientes.get(x, float('inf')))
        fila_seleccionada = grupo[grupo['asesor'] == asesor_min_clientes].iloc[0]
        resultado_final = pd.concat([resultado_final, fila_seleccionada.to_frame().T])

        # Actualizar el contador de clientes asignados para ese asesor
        contador_clientes[asesor_min_clientes] += 1

    return resultado_final

def guardar_csv(df):
    df.to_csv("clientes_asesores.csv", index=False, encoding='utf-8-sig')

# Ejecución principal
datos_clientes = obtener_datos()

if datos_clientes.empty:
    print("No se encontraron resultados para la consulta.")
else:
    datos_clientes = seleccionar_fila_menor_asesor(datos_clientes)
    guardar_csv(datos_clientes)
    print("Archivo generado correctamente: clientes_asesores.csv")
